{
  "name": "Sireus in Sireus",
  "info": "Import data from Prometheus that we exported, so we can monitor and execute commands on ourself",
  "states": [
    {
      "name": "In Use",
      "info": "Is there at least 1 user using the demo?",
      "labels": ["Default", "In Use", "Abandoned"]
    }
  ],
  "lock_timers": [
    {
      "type": 1,
      "name": "Single Bot Lock",
      "info": "Per bot lock, so that each bot can operate independently.  Use for Node or Agent level control."
    },
    {
      "type": 0,
      "name": "Full Bot Group Lock",
      "info": "Lock for controlling the entire Bot Group.  Use for Service or Platform level control."
    }
  ],
  "bot_timeout_stale": 60,
  "bot_timeout_remove": 120,
  "bot_remove_store_duration": "24h",
  "refuse_bot_resumption": false,
  "action_threshold": 0.5,
  "journal_rollup_states": [],
  "journal_rollup_duration": "30m",
  "bot_extractor": {
    "query_name": "Sireus Bot Group Counts",
    "key": "bot_group"
  },
  "queries": [
    {
      "query_server": "prometheus_primary",
      "query_type": 0,
      "name": "Sireus Bot Group Counts",
      "info": "How many Bots are in each Bot Group in Sireus?",
      "query": "sum(sireus_bot_exists) by (bot_group)",
      "interval": "5s"
    }
  ],
  "variables": [
    {
      "name": "bot_count",
      "format": 11,
      "bot_key": "bot_group",
      "query_name": "Sireus Bot Group Counts",
      "query_key": "",
      "query_key_value": "",
      "evaluate": "",
      "bool_range_start": 1,
      "bool_range_end": 1,
      "bool_invert": false,
      "export": false
    }
  ],
  "actions": [
  ]
}
