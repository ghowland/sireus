<section class="section">
{{> 'partials/breadcrumbs_common' }}
    <h1 class="title is-1">
        Bot Group: {{botGroup.Name}}
    </h1>
    <p class="subtitle">
        {{botGroup.Info}}
    </p>

    <div class="block">
        <div class="box">
            <h1 class="title is-big">Bots</h1>
            <div class="content">
                <p>Select one of the bots to see Sireus working on an individual agent level, which is where the scoring and Actions take place.</p>
            </div>
            {{> 'partials/bot/table' }}

        </div>
    </div>

    <div class="block">
        <div class="box">

            <h3 class="title is-2">
                Configuration Data
            </h3>
            <p class="subtitle">
                For the purpose of the demo, these are not editable, but that will be added after the Design RFC is complete.
            </p>

            <div class="content">
                <p>This is the configuration data that creates the Sireus Decision System.</p>
            </div>

            <h1 class="title is-big">Queries</h1>
            <div class="content">
                <p>Queries collect metrics from Prometheus, so we can populate variables.</p>
            </div>
            {{> 'partials/query/table' }}

            <h1 class="title is-big">Variables</h1>
            <div class="content">
                <p>Variables population has two phases, extracting from Queries, and synthesizing new variables by evaluating expression on from queried variables.</p>
            </div>
            {{> 'partials/variable/table' }}

            <h1 class="title is-big">States</h1>
            <div class="content">
                <p>States are specialized State Machines, they only go forward or reset.  They can skip entries forward.  The combination of several state pipelines allows us a lot of expression about what the current state of the operational system is.</p>
                <p>Only moving forward or resetting removes inner loops of the state machines where it can be stuck.  The entire state pipeline is a loop that will find the appropriate state on reset.</p>
            </div>
            {{> 'partials/state/table' }}

            <h1 class="title is-big">Lock Timers</h1>
            <div class="content">
                <p>Lock Timers can be required by Actions before they can run, so you can lock concurrency, and are given a timeout so that they will always unlock later, and the system never gets stuck.</p>
            </div>
            {{> 'partials/lock_timer/table' }}
        </div>
    </div>
</section>
