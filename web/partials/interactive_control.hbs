<div id="interactive_control" class="is-hidden-not">
    <div class="content">
        <div class="box has-background-info has-text-white">
            <div class="columns">
                <div class="column is-three-quarters">
                    <h1 class="is-5 has-text-white">Interactive Controls</h1>
                </div>
                <div class="column" style="text-align: right">
                    <span style="padding-left: 1.5em; font-size: 1.4em;">
                        <span class="icon has-text-white has-tooltip-arrow" data-tooltip="Close" style="border-bottom: 0 solid !important;">
                          <i class="fa-solid fa-circle-xmark" onclick="$('#interactive_control').toggleClass('is-hidden')"></i>
                        </span>
                    </span>
                </div>
            </div>

            <div class="has-background-white has-text-black no-draggon" style="padding: 1.5em;">
                <div class="columns">
                    <div class="column is-three-quarters">
                        <h4>Set Interactive Time Range</h4>
                        <p>All interactive sessions use a set time range to cache metrics data and perform quick tests.</p>
                    </div>
                    <div class="column">
                        <div class="field">
                            <input id="switchRoundedDefault" type="checkbox" name="switchRoundedDefault" class="switch is-outlined is-info" checked="checked">
                            <label for="switchRoundedDefault">Play</label>
                        </div>
                    </div>
                </div>
                <div class="columns">
                    <div class="column">
                        <div class="field">
                            <input class="is-checkradio has-background-color is-info" id="enable_time_control" type="checkbox" name="enable_time_control" checked="checked">
                            <label for="enable_time_control">Query Time Start: <span id="time_control_start"></span></label>
                        </div>
                    </div>
                    <div class="column">
                        <input class="slider is-fullwidth is-info" step="1" min="0" max="100" value="100" type="range" id="time_control_slider_start" onchange="SetTimeControl('time_control_slider_start', 'queryStartTime', 'time_control_start')">
                    </div>
                </div>
                <div class="columns">
                    <div class="column">
                        <div class="field">
                            <input class="is-checkradio has-background-color is-info" id="enable_time_control" type="checkbox" name="enable_time_control" checked="checked">
                            <label for="enable_time_control">Query Time End: <span id="time_control_end"></span></label>
                        </div>
                    </div>
                    <div class="column">
                        <input class="slider is-fullwidth is-info" step="1" min="0" max="100" value="100" type="range" id="time_control_slider_end" onchange="SetTimeControl('time_control_slider_end', 'queryEndTime', 'time_control_end')">
                    </div>
                </div>

                <h4>Override States</h4>
                <h4>Override Variables</h4>
            </div>
        </div>
    </div>
</div>
<script>
    var interactiveControl = {
        queryStartTime: undefined,
        queryEndTime: undefined,
        playFromQueryTime: true,
    };

    function ZeroPad(num, places) {
        var zero = places - num.toString().length + 1;
        return Array(+(zero > 0 && zero)).join("0") + num;
    }

    function PrintUTCTime(d) {
        var output = d.getUTCFullYear() + '-' + ZeroPad(d.getUTCMonth() + 1, 2) + '-' + ZeroPad(d.getUTCDate(), 2) + ' ' + d.getUTCHours() + ':' + ZeroPad(d.getUTCMinutes(), 2) + ':' + ZeroPad(d.getUTCSeconds(), 2) + ' UTC';

        return output;
    }

    function SetTimeControl(valueElementId, interactiveVarName, outputElementId) {
        var d = new Date();

        d.setTime(Date.now())

        var timeNum = d.getTime();

        var value = 100 - $('#'+valueElementId).val();

        var timeSpan = 86400 / 100; // One hour timespan
        // var timeSpan = 3600 / 100; // One hour timespan

        var d2 = new Date(timeNum - (value * 1000 * timeSpan));

        var output = PrintUTCTime(d2);

        // Get the UTC time in milliseconds
        interactiveControl[interactiveVarName] = d2.getTime();

        // If we have both our values here, test to see if they are invalid and mark them with colors
        if (interactiveControl['queryStartTime'] !== undefined && interactiveControl['queryEndTime'] !== undefined) {
            // If end time is before start time, it's an error
            if (interactiveControl['queryEndTime'] < interactiveControl['queryStartTime']) {
                $('#time_control_slider_end').removeClass('is-info');
                $('#time_control_slider_end').addClass('is-danger');
            }
            else {
                $('#time_control_slider_end').removeClass('is-danger');
                $('#time_control_slider_end').addClass('is-info');
            }
        }

        $('#'+outputElementId).html(output);
    }
    SetTimeControl();
</script>
